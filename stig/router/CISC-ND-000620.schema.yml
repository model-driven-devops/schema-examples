---
title: CISC-ND-000620 Schema
type: object
description: >
  Passwords need to be protected at all times, and encryption is the standard method for protecting
  passwords. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily
  compromised. Network devices must enforce cryptographic representations of passwords when storing
  passwords in databases, configuration files, and log files. Passwords must be protected at all
  times; using a strong one-way hashing encryption algorithm with a salt is the standard method for
  providing a means to validate a password without having to store the actual password. Performance
  and time required to access are factors that must be considered, and the one way hash is the most
  feasible means of securing the password and providing an acceptable measure of password security.
  If passwords are stored in clear text, they can be plainly read and easily compromised. In many
  instances, verifying the user knows a password is performed using a password verifier. In its
  simplest form, a password verifier is a computational function that is capable of creating a hash
  of a password and determining if the value provided by the user matches the stored hash.
required:
  - openconfig-system:system
properties:
  openconfig-system:system:
    type: object
    required:
      - openconfig-system-ext:services
    properties:
      openconfig-system-ext:services:
        type: object
        required:
          - openconfig-system-ext:config
        properties:
          openconfig-system-ext:config:
            type: object
            required:
              - openconfig-system-ext:service-password-encryption
            properties:
              openconfig-system-ext:service-password-encryption:
                type: boolean
                const: true
